// This program tests the interfacing of the HC-SR501 PIR sensor with the MSP430.
// When a PIR sensor is activated, it will light the associated LED.

#include <msp430.h> 
#include "driverlib.h"

#define LEFT_PIR_LED BIT4 //P1.4
#define MID_PIR_LED BIT0// DECIDE ON PIN TO ALLOCATE!
#define RIGHT_PIR_LED BIT0// DECIDE ON PIN TO ALLOCATE!

#define PIR_LEFT BIT3 //P1.3
#define PIR_MID BIT0// DECIDE ON PIN TO ALLOCATE!
#define PIR_RIGHT BIT0// DECIDE ON PIN TO ALLOCATE!

// PIR sensors
bool left_pir_activated = false;
bool mid_pir_activated = false;
bool right_pir_activated = false;

void init_GPIO()
{
    // Setup the LEDs
    P1DIR |= LEFT_PIR_LED;
    P1OUT &= ~LEFT_PIR_LED;

    // Setup the PIR pins
    P1DIR &= ~PIR_LEFT;
    P1REN |= PIR_LEFT;
    P1OUT |= PIR_LEFT;
    P1IE |= PIR_LEFT;
    P1IES &= ~PIR_LEFT; // Low to high transition interrupt for PIR sensor
    P1IFG &= ~PIR_LEFT;
}

// Define the interrupt service routine for port 1
#pragma vector = PORT1_VECTOR
__interrupt void P1_ISR(void)
{
    switch (__even_in_range(P1IV, P1IV_P1IFG7))
    {
    // Left PIR sensor
    case P1IV_P1IFG3:
        left_pir_activated = true;
        P1IFG &= ~PIR_LEFT;
        break;
    }
}

int main(void)
{
	WDTCTL = WDTPW | WDTHOLD;	// stop watchdog timer
	PMM_unlockLPM5();
	init_GPIO();
	__enable_interrupt();
	
	while(1)
	{
	    // Check each interrupt flag and light LED if movement detected

	    if(left_pir_activated)
	    {
	        bool left_pir_activated = false;
	        P1DIR |= LEFT_PIR_LED;
	        __delay_cycles(20000);
	    }

	    if(mid_pir_activated)
	    {
	        bool mid_pir_activated = false;
	        P1DIR |= MID_PIR_LED;
	        __delay_cycles(20000);
	    }

	    if(right_pir_activated)
        {
	        bool right_pir_activated = false;
            P1DIR |= RIGHT_PIR_LED;
            __delay_cycles(20000);
        }

	    else
	    {
	        // No activations, clear the LEDs
	        P1DIR &= ~LEFT_PIR_LED;
	        P1DIR &= ~MID_PIR_LED;
	        P1DIR &= ~RIGHT_PIR_LED;
	    }
	}
	return 0;
}
